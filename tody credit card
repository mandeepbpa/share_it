from credit_card import CreditCard


mylist=[1,34,5,7,8,5]
print(mylist)

otherlist=['apple' ,'mango', 'banana']
print(otherlist)
print(mylist[4])
mylist.append(10) #insert at the last
mylist.insert(5,50) # insert  at the give place
print(mylist)
mylist.remove(5)# remove by using the particlar thing
print(mylist)
mylist.pop(1) # remove using  index
print(mylist)

mylist.reverse() #sorting out the list
print(mylist)
# it help to merge two lisates  given a in a data program
mergeList = mylist + otherlist
print(mergeList)
# it helps to multiply e the list with nay ingerter or numbver or with it self also
mm = mylist * 2
print(mm)

#to select particulr the particular lsit odf arry or any string
sel = mm[1:8:2]
print(sel)
# to find  a particualr thing in a list of any thing
isthr= 5 in mm
print(isthr)


c1= CreditCard("alex",111,111,111111)
c2= CreditCard("alex1",1111,1111,1111111)
c=[c1,c2]

print(c[1].getBalance())




 int count= 0 ; 
          int add =0;
          while(count<=10){
            add = add + count;
             System.out.println(count +" sum is " + add );
             ++count;
          }
          
          
          count = 1;
          add = 0;
          do {
              add = add + count;
              ++count;
          System.out.println("print"+add);
           
          }
          while (count>=10);
          
          add = 0;
          for (int i=10; i>0; ++i){
          add= add+i;}
          System.out.println("print"+add);

















class Event:
    def __init__(self, beg_hr, beg_min, end_hr, end_min, location, desc):
        self.beg_hr = beg_hr
        self.beg_min = beg_min
        self.end_hr = end_hr
        self.end_min = end_min
        self.desc = desc
        self.location = location

    def printEvent(self):
        result = "From " + str(self.beg_hr) + ":" + str(self.beg_min)
        result += " To " + str(self.end_hr) + ":" + str(self.end_min) + "\n"
        result += "Description: " + self.desc + "\n"
        result += "Location: " + self.location +"\n"
        result += "----------------------------------------------------------"
        return result


class Day:
    def __init__(self, name):
        self.name = name
        self.events = []

    def addEvent(self, event):
        self.events.append(event)

    def printEvents(self):

        for i in self.events:
            print(i.printEvent())

class Month:
    def __init__(self, month_numerical_value):
        self.month_numerical_value = month_numerical_value
        if month_numerical_value == 2:
            self.number_of_days = 28
        elif month_numerical_value == 1 or month_numerical_value == 3 or month_numerical_value == 5 or month_numerical_value == 7:
            self.number_of_days = 31
        else:
            self.number_of_days = 30
        self.days = [self.number_of_days]

class Year:
    def __init__(self, year_numerical_value):
        self.months = [12]

class Calendar:
    def __init__(self):
        self.years = [100]
        #1996 - 2096

    def initialize_calendar(self):
        for y in range(1996, 2029):
            yr = Year(y)
            self.years[y-1996] = yr
            for m in range(0, 11):
                mon = Month(m)
                yr.months[m] = mon
                for d in range(0, mon.number_of_days-1):
                    dy = Day(d)
                    mon.days[d] = dy
                    print(str(d) + " - " + str(m))
        print("Initialization completed.")


    def addEvent(self, beg_hr, beg_min, end_hr, end_min, location, desc, year, month, day):
        tmp_event = Event(beg_hr, beg_min, end_hr, end_min, location, desc)




    # def removeEvent
    # displayEvents(day)
    # editEvent
    # searchEvent




